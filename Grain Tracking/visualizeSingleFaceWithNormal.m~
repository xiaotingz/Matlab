% function [tri_normal, tri_centroid] = visualizeSingleFaceWithNormal(file, obj_facelabel, reverse_winding)
% ###########################################################################
% * Inputs
%     - reverse_winding: a bool variable determining the triangle normal
%     direction
% ###########################################################################
% ------------------ load data for debug --------------------
% file = ('/Users/xiaotingzhong/Desktop/Datas/Ni_an4_5/An4new6_fixedOrigin_smooth.dream3d');
% obj_facelabel = [332, 2275];
% -----------------------------------------------------------
facelabel = double(h5read(file,'/DataContainers/TriangleDataContainer/FaceData/FaceLabels')).';
normal = double(h5read(file,'/DataContainers/TriangleDataContainer/FaceData/FaceNormals')).';
centroid = double(h5read(file,'/DataContainers/TriangleDataContainer/FaceData/FaceCentroids')).';
tri_node = 1 + double(h5read(file,'/DataContainers/TriangleDataContainer/_SIMPL_GEOMETRY/SharedTriList'))';
node_coord = double(h5read(file,'/DataContainers/TriangleDataContainer/_SIMPL_GEOMETRY/SharedVertexList'))';

mask_half1 = (facelabel(:,1) == obj_facelabel(1) & facelabel(:,2) == obj_facelabel(2));
mask_half2 = (facelabel(:,1) == obj_facelabel(2) & facelabel(:,2) == obj_facelabel(1));
mask_full = (mask_half1 | mask_half2);

obj_normal_full = normal(mask_full, :);
obj_centroid = centroid(mask_full, :);
obj_node = tri_node(mask_full, :);

trisurf(obj_node, node_coord(:,1), node_coord(:,2), node_coord(:,3), 'Facealpha', 0.3, 'edgealpha', 0.3);
rotate3d
hold on
quiver3(obj_centroid(:,1),obj_centroid(:,2),obj_centroid(:,3), ...
     obj_normal(:,1),obj_normal(:,2),obj_normal(:,3),0.5,'color','r');

% end






